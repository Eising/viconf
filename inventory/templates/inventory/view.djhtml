{% extends 'base/base.djhtml' %}
{% load widget_tweaks %}
{% block content %}
    {% load indirect %}
<div class="col-md-10" id="maincontents">
  <div class="row">
    <div class="content-box-large">
      <div class="panel-heading">
          <div class="panel-title">{{ inventory.fields.name }}</div>
      </div>
      <div class="panel-body">

            <form method="POST" action="{% url 'inventory:addrow' pk=inventory.id %}" id="rowtable">{% csrf_token %}
                <input type="hidden" name="inventory_id" value="<%= @inventory.id %>">
              <table class="table table-striped table-bordered" id="inventorytable" >
                  <thead>
                      <tr>
                          {% for column in columns %}
                              <th>{{ column }}</th>
                          {% endfor %}
                          <th></th>
                      </tr>
                  </thead>
                  <tbody>
                      {% for row in children %}
                          <tr>

                              {% for key, validators in columns.items %}
                                  <td><a href="#" id="{{ key }}" data-type="text" data-pk="{{ row.id }}" data-name="{{ key }}" data-url="{% url 'inventory:jsonupdaterow' %}" data-placeholder="Required" class="editable editable-click">{% indirect row.fields key %}</a> </td>
                              {% endfor %}
                              <td><a href="#" data-href="{% url 'inventory:deleterow' pk=inventory.id row_id=row.id %}" data-toggle="modal" data-target="#confirm-delete"><button class="btn btn-danger" type="button" data-href="{% url 'inventory:deleterow' pk=inventory.id row_id=row.id %}" data-toggle="modal"  data-target="#confirm-delete" >Delete</button></a> </td>
                          </tr>
                      {% endfor %}

                    </tbody>
                      <tfoot>
                      <tr>

                          {% for field in form %}
                              <td>
                                  {% if field.errors %}
                                      <div class="has-error">
                                      {% render_field field class="form-control required" placeholder=field.label %}
                                      </div>
                                  {% else %}
                                      {% render_field field class="form-control required" placeholder=field.label %}
                                  {% endif %}

                              </td>

                          {% endfor %}


                            <td><button type="submit" class="btn btn-success">Add</button></td>
                      </tr>
                      {% if form.errors %}
                          <tr>
                              {% for field in form %}
                                  <td>
                                      {% if field.errors %}
                                          <div class="has-error">
                                              <span class="help-block">{{ field.errors }}</span>
                                          </div>
                                      {% endif %}
                                  </td>
                              {% endfor %}
                          </tr>
                      {% endif %}


                      </tfoot>
              </table>
                        </form>
                        <ul>
                            <li><a href="{% url 'inventory:generatetemplate' pk=inventory.id %}">Download XLSX template for import</a></li>
                            <li><a href="{% url 'inventory:importtemplate' pk=inventory.id %}">Upload XLSX data</a></li>
                        </ul>
          </div>
      </div>
    </div>
  </div>
</div>


{% endblock %}

{% block viewjs %}
    <script type="text/javascript">
     $(document).ready(function(){
         var csrftoken = jQuery("[name=csrfmiddlewaretoken]").val();
         function csrfSafeMethod(method) {
             // these HTTP methods do not require CSRF protection
             return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
         }
         $.ajaxSetup({
             beforeSend: function(xhr, settings) {
                 if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                     xhr.setRequestHeader("X-CSRFToken", csrftoken);
                 }
             }
         });

         $('.editable').editable();
         $('#inventorytable').dataTable({
             "bSort": false
         });
         var $validator = $("#rowtable").validate({
             errorElement: "em",
             errorPlacement: function(error, element) {
                 // Add the help-block class to the error element
                 error.addClass("help-block");

                 if (element.prop("type") === "checkbox") {
                     error.insertAfter(element.parent("label"));
                 } else {
                     error.insertAfter(element);
                 }
             },
             highlight: function(element, errorClass, validClass) {
                 $(element).parents(".col-sm-5").addClass("has-error").removeClass("has-success");
             },
	           unhighlight: function(element, errorClass, validClass) {
	               $(element).parents(".col-sm-5").addClass("has-success").removeClass("has-error");
	           },

    });
     });



    </script>

{% endblock %}
